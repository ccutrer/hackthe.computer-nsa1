#!/usr/bin/env ruby

# To solve this problem, make the './run' executable handle any 
# appropriate command line arguments and stdin and output the
# solution to stdout.

group_size = ARGV[0].split('=').last.to_i

require 'json'
require 'set'

all_friends = JSON.load(STDIN.read)

friendships = {}

all_friends.each do |friendship|
  friendships[friendship.first] ||= Set.new
  friendships[friendship.first] << friendship.last
  friendships[friendship.last] ||= Set.new
  friendships[friendship.last] << friendship.first
end

groups = []

people = friendships.keys

all_friends.each do |friendship|
  group = friendship.to_set
  people.each do |person|
    group << person if group.all? { |p| friendships[p].include?(person) }
  end
  groups << group if group.size >= group_size
end

puts groups.uniq.map(&:to_a).inspect
