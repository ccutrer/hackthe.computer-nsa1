#!/usr/bin/env ruby

# To solve this problem, make the './run' executable handle any 
# appropriate command line arguments and stdin and output the
# solution to stdout.

group_size = ARGV[0].split('=').last.to_i

require 'json'
require 'set'

all_friends = JSON.load(STDIN.read)

friendships = {}

all_friends.each do |friendship|
  friendships[friendship.first] ||= Set.new
  friendships[friendship.first] << friendship.last
  friendships[friendship.last] ||= Set.new
  friendships[friendship.last] << friendship.first
end

groups = []

people = friendships.keys

(0..(2**people.length)).each do |i|
  members_mask = "%0#{people.length}b" % i
  count = 0
  members_mask.each_char do |x|
    count += 1 if x == '1'
  end
  next unless count >= group_size

  group = []
  members_mask.each_char.each_with_index do |val, i|
    next unless val == '1'
    group << people[i]
  end

  valid = true
  group.each_with_index do |member, i|
    group.each_with_index do |friend, j|
      next if j <= i
      unless friendships[member].include?(friend)
        valid = false
        break
      end
    end
    break unless valid
  end

  groups << group if valid
end

puts groups.inspect

