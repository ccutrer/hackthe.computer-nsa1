#!/usr/bin/env ruby

# To solve this problem, make the './run' executable handle any 
# appropriate command line arguments and stdin and output the
# solution to stdout.

group_size = ARGV[0].split('=').last.to_i

require 'json'
require 'set'

all_friends = JSON.load(STDIN.read)

friendships = {}

all_friends.each do |friendship|
  friendships[friendship.first] ||= Set.new
  friendships[friendship.first] << friendship.last
  friendships[friendship.last] ||= Set.new
  friendships[friendship.last] << friendship.first
end

groups = []

people = friendships.keys
people.each_with_index do |person, i|
  people.each_with_index do |person2, j|
    next if j <= i
    next unless friendships[person].include?(person2)
    group = Set.new
    group << person
    group << person2

    people.each_with_index do |person3, k|
      next if k <= j
      group << person3 if group.all? { |p| friendships[p].include?(person3) }
    end
    groups << group.to_a if group.size >= group_size
  end
end

puts groups.inspect
